---
- name: Create validator security group
  delegate_to: localhost
  ec2_group:
      ec2_access_key: "{{ access_key }}"
      ec2_secret_key: "{{ secret_key }}"
      name: "{{ validator_security_group }}"
      description: "Default security group"
      region: "{{ region }}"
      purge_rules: true

- name: Allow outbound traffic
  delegate_to: localhost
  ec2_group:
      ec2_access_key: "{{ access_key }}"
      ec2_secret_key: "{{ secret_key }}"
      name: "{{ validator_security_group }}"
      description: "Default security group"
      region: "{{ region }}"
      purge_rules_egress: false
      purge_rules: false
      rules_egress:
        - proto: all
          from_port: all
          to_port: all
          cidr_ip: 0.0.0.0/0

- name: Add ssh access
  delegate_to: localhost
  ec2_group:
      ec2_access_key: "{{ access_key }}"
      ec2_secret_key: "{{ secret_key }}"
      name: "{{ validator_security_group }}"
      description: "Default security group"
      region: "{{ region }}"
      purge_rules_egress: false
      purge_rules: false
      rules:
        - proto: tcp
          from_port: "{{ item }}"
          to_port: "{{ item }}"
          cidr_ip: 0.0.0.0/0
  with_items:
    - "22"
  when: allow_validator_ssh == true

- name: Add p2p access
  delegate_to: localhost
  ec2_group:
      ec2_access_key: "{{ access_key }}"
      ec2_secret_key: "{{ secret_key }}"
      name: "{{ validator_security_group }}"
      description: "Default security group"
      region: "{{ region }}"
      purge_rules_egress: false
      purge_rules: false
      rules:
        - proto: tcp
          from_port: "{{ item }}"
          to_port: "{{ item }}"
          cidr_ip: 0.0.0.0/0
        - proto: udp
          from_port: "{{ item }}"
          to_port: "{{ item }}"
          cidr_ip: 0.0.0.0/0
  with_items:
    - "30303"
  when: allow_validator_p2p == true
